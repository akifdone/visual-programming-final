<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>